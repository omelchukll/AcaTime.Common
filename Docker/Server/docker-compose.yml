version: '3.8'

name: acatime

services:
  # API сервіс
  api:
    container_name: acatime-api
    image: ghcr.io/omelchukll/acatime-api:latest
    ports:
      - "5000:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__DefaultConnection=Host=db;Database=acadb;Username=postgres;Password=postgres_password
      # Налаштування логування
      - Serilog__MinimumLevel__Default=Information
      - Serilog__WriteTo__0__Name=Console
      - Serilog__WriteTo__1__Name=File
      - Serilog__WriteTo__1__Args__path=/app/logs/acatime.log
      # Додаткові налаштування
      - ASPNETCORE_URLS=http://+:80
      - ASPNETCORE_FORWARDEDHEADERS_ENABLED=true
    volumes:
      - api-logs:/app/logs
    depends_on:
      db:
        condition: service_healthy
    networks:
      - acadb-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 15s
      timeout: 5s
      retries: 10

  # База даних PostgreSQL
  db:
    container_name: acatime-db
    image: postgres:16
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=acadb
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres_password
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./DB/sample.sql:/docker-entrypoint-initdb.d/sample.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d acadb"]
      interval: 15s
      timeout: 5s
      retries: 10
    networks:
      - acadb-network

volumes:
  postgres-data:
    name: acatime-postgres-data
  api-logs:
    name: acatime-api-logs

networks:
  acadb-network:
    name: acatime-network
    driver: bridge 